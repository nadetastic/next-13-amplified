import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { withSSRContext, Auth } from 'aws-amplify'
import { Authenticator } from '@aws-amplify/ui-react'

export default function Home({creds, user, error}) {

  const google = async () => {
    try {
      const { user } = await Auth.federatedSignIn({ provider: 'Google' });
      console.log(user);
    } catch(e){
      console.log(e);
    }
  }
  const signIn = async () => {
    try {
        const { user } = await Auth.signIn('dkkiuna11@gmail.com', 'abcd1234');
        console.log(user);
    } catch (error) {
        console.log('error signing in', error);
    }
}

  const signOut = async () => {
    await Auth.signOut()
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
            <h1 className={styles.title}>Welcome to <a href="https://nextjs.org">Next.js!</a></h1>
            <h3>Using <code>Amplify.Auth</code></h3>
            <div className={styles.grid}>
                <div className={styles.card}>
                    <h2>Error</h2>
                    <p>{error}</p>
                </div>
                <div className={styles.card}>
                    <h2>Creds</h2>
                    <p>{creds}</p>
                </div>
                <div className={styles.card}>
                    <h2>User</h2>
                    <p>{user}</p>
                </div>
            </div>
            <div className={styles.grid}>
                <div className={styles.card}>
                    <button onClick={google}>Google</button><br />
                    <button onClick={signIn}>Sign In</button><br />
                    <button onClick={signOut}>Sign Out</button>
                </div>
            </div>

      </main>

      <footer className={styles.footer}>
        <p>Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </p>
      </footer>
    </div>
  )
}


export async function getServerSideProps({ req }) {
  const SSR = withSSRContext({ req });

  try {
    const creds = await SSR.Auth.currentCredentials()
    const user = await SSR.Auth.currentAuthenticatedUser()
    return {
        props: {
          creds: JSON.stringify(creds),
          user: JSON.stringify(user),
          error: false
        }
      }
  } catch(e){
    return {
        props: {
          error: JSON.stringify(e),
          creds: 'No creds',
          user: 'No user'
        }
      }
  }
}

// aws ecr get-login-password --profile dkkiuna --region us-east-1 | docker login --username AWS --password-stdin 524405517764.dkr.ecr.us-east-1.amazonaws.com